@model ChangePasswordModel
@using Nop.Web.Models.Customer;
@{

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    ViewBag.HideMenu = "true";

}

@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ChangePassword })
}




@section custnavmob{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ChangePassword, isMobile = true })
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-main-sml mt-normal">
        @*<h1>@T("Account.ChangePassword")</h1>*@
        @if (!String.IsNullOrEmpty(Model.Result))
        {
            <div class="result">
                @Model.Result
            </div>
        }
        @{
            var validationSummary = Html.ValidationSummary(true);
        }
        @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
        {
            <div class="message-error">@validationSummary</div>
        }

        <div class="fieldset">

            <div class="form-group">
                @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" }, ":")
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.OldPassword)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.NewPassword, new { @class = "control-label" }, ":")
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                @Html.ValidationMessageFor(m => m.NewPassword)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmNewPassword, new { @class = "control-label" }, ":")
                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ConfirmNewPassword)
            </div>

        </div>


        <div class="form-group">
            <div class="buttons">
                <input class="btn btn-info half-width" type="submit" value="@T("Account.ChangePassword.Button")" />
            </div>
        </div>




    </div>



}




@section scripts{

    @Scripts.Render("~/bundles/jqueryval")
}


@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="panel panel-default form-panel">

            <div class="panel-heading">
                <h1>@T("Account.ChangePassword")</h1>
            </div>
            <div class="panel-body">
                <div class="message-error">
                    @Html.ValidationSummary(true)
                </div>
                @if (!String.IsNullOrEmpty(Model.Result))
                {
                    <div class="result">
                        @Model.Result
                    </div>
                }
                <div class="fieldset">
                    <div class="form-fields">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.OldPassword, new { @class = "col-md-2 control-label" }, ":")
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.OldPassword, new { @class = "form-control" })
                            </div>
                            <div class="col-md-3">
                                @Html.ValidationMessageFor(model => model.OldPassword)
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.NewPassword, new { @class = "col-md-2 control-label" }, ":")
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control" })
                            </div>
                            <div class="col-md-3">
                                @Html.ValidationMessageFor(model => model.NewPassword)
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.ConfirmNewPassword, new { @class = "col-md-2 control-label" }, ":")
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.ConfirmNewPassword, new { @class = "form-control" })
                            </div>
                            <div class="col-md-3">
                                @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="buttons text-center">
                    <input type="submit" class="button-1 btn btn-default" value="@T("Account.ChangePassword.Button")" />
                </div>
            </div>
        </div>

    }*@