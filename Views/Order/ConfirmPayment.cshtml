@model Nop.Web.Models.Flitts.ConfirmPaymentModel
@using Nop.Web.Models.Customer;

@{
    ViewBag.Title = "ConfirmPayment";
    ViewBag.HideMenu = "true";
}



<section class="col-main-sml mt-normal">

    @*<h1>Confirm Payment</h1>*@

    @using (Html.BeginForm())
    {


        <div class="panel panel-default">
            @{

                if (Model.PendingOrder.Count == 0)
                {
                    <div class="panel-body">
                        <p>
                            You have no payment to confirm
                            <br /><br>
                            @Html.ActionLink("Back to My Account", "MyAccount", new { controller = "Customer" }, new { @class = "account" })
                        </p>
                    </div>

                }
                else
                {
                    //Begin form
                    <div class="panel-body">
                        <div class="message-error">
                            @Html.ValidationSummary(true)
                        </div>

                        <div class="fieldset">
                            <div class="form-fields">
                                <div class="form-group">
                                    <label class="control-label">Order number</label>
                                    @Html.DropDownListFor(model => model.Id, new SelectList(Model.PendingOrder, "OrderId", "DispayText"), null, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="fieldset">

                            <div class="form-fields">
                                <div class="form-group">
                                    <label class="control-label">Select shopatvelvet's account</label>
                                    @Html.DropDownListFor(model => model.ReceiverBank, new SelectList(new List<Object>{
                                           new { value ="BCA" , text = "BCA"  },
                                           new { value ="Mandiri" , text = "Mandiri" }}, "value", "text", "BCA"), null, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="fieldset">
                            @*<h2>Payment Details</h2>*@
                            <div class="form-fields">

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BankAccountNumber)
                                    </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BankAccountName, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.BankAccountName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BankAccountName)
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Amount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Amount)
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPaymentDate, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.ConfirmPaymentDate, "{0:MM/dd/yyyy}", new { @class = "form-control" })
                                    @*@Html.DatePickerDropDowns(Html.FieldNameFor(x => x.ConfirmPaymentDate),
                                        "Month",
                                        "Year",
                                        DateTime.Now.Year - 1,
                                        DateTime.Now.Year,
                                        DateTime.Now.Day,
                                        DateTime.Now.Month,
                                        DateTime.Now.Year)*@

                                    @Html.ValidationMessageFor(model => model.ConfirmPaymentDate)


                                </div>
                            </div>
                        </div>







                        <div class="buttons text-right">
                            <input type="submit" id="submit-button" name="submit-button" class="btn btn-info half-width load" data-loading-text="Processing..." value="Confirm payment" />
                            @*<br /><br>
                                @Html.ActionLink("Back to My Account", "MyAccount", new { controller = "Customer" }, new { @class = "account" })*@
                        </div>

                    </div>

                    //ENd form
                }

            }




        </div>

    }


</section>

@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ConfirmPayment })
}


@section custnavmob{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ConfirmPayment, isMobile = true })
}

@section scripts {

    @Scripts.Render("~/bundles/jqueryval")


    <!--kendo
    <script src="~/Scripts/kendo/2014.1.318/kendo.all.min.js"></script>
    <script src="~/Scripts/kendo/2014.1.318/kendo.aspnetmvc.min.js"></script>
        -->
}
