@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using Nop.Web.Models.Catalog;

@helper Text_Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @Html.Raw(@input)
    }
    else
    {
        @Html.Raw(@input.Substring(0, length))<text>...</text>
    }
}


@helper Price_Modifier(string input, int length)
{
    if (input.Length <= length)
    {
        @Html.Raw(@input)
    }
    else
    {
        @Html.Raw(@input.Substring(0, length))<text>...</text>
    }
}

@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }
    
    
    @* default view 2 columns if new arrivals *@
var defCol = "col-sm-4";
//if (Request.RawUrl.Contains("new-arrivals"))
//{
//    defCol = "col-sm-6";
//}
}


    <div class="product-item @defCol col-xs-6 mix @Model.ShortDescription" data-productid="@Model.Id" data-cat="@Model.Id">

        @if (Model.AlternateImage != null)
        {

            <div><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" title="@Html.DisplayFor(m => m.Name)"><img data-alt-src="@Model.AlternateImage.ImageUrl" src="@Model.DefaultPictureModel.ImageUrl" class="img-responsive swapImg" /></a></div>

        }
        else
        {
            <div><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" title="@Html.DisplayFor(m => m.Name)"><img src="@Model.DefaultPictureModel.ImageUrl" class="img-responsive swapImg" /></a></div>

        }


        @*test purpose*@
        @*<div><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})" title="@Html.DisplayFor(m => m.Name)">
                 <img data-alt-src="http://dev.shopatvelvet.com/content/images/uploaded/dummy.jpg" src="http://dev.shopatvelvet.com/content/images/uploaded/dummy-alternate.jpg" class="img-responsive swapImg" /></a>
        </div>*@

        <div class="description">
            @*@if (Model.CreatedOnUtc.Value.AddDays(14) > DateTime.Now){
                <span class="badge pull-right">New</span>
            }*@

            <h3><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName})">@Html.DisplayFor(m => m.Name) @Model.ShortDescription</a></h3>

            @*<span class="kleur">
                @Model.ShortDescription
            </span>*@


            @if (Model.Quantity > 0)
            {
                var prijs = Model.ProductPrice.Price;
                if (prijs.Contains("From"))
                {
                    prijs = Model.ProductPrice.Price.Replace("From", "");
                }

                <div class="prices">
                    @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice) || Model.ProductPrice.DisplayTaxShippingInfo)
                    {


                        if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                        {
                            <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                        }
                        <span class="price actual-price">@prijs</span>

                        @*@if (Model.ProductPrice.DisplayTaxShippingInfo)
                        {
                            var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                            //of course, you can modify appropriate locales to include VAT info there
                            <div class="tax-shipping-info">
                                @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                            </div>
                        }*@
                    }
                    else
                    {
                        <span class="price actual-price">@prijs</span>
                    }
                </div>

            }
            else
            { <div class="prices">
                    <span class="out-of-stock">
                        Out of stock
                    </span>
                </div>


            }
        </div>

        @*@if (!Model.ProductPrice.DisableBuyButton)
        {
            <div class="buttons">
                <input type="button" class="btn btn-sm btn-default" value="@(Model.ProductPrice.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink    ');return false;" />
            </div>
        }*@

    </div>
