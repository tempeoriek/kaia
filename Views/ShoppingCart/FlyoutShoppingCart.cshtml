
<div id="flyout-cart" class="flyout-cart">
    <div class="mini-shopping-cart">

        <div class="count">
            @if (Model.TotalProducts == 0)
            {
                @T("ShoppingCart.Mini.NoItems")
            }
            @*else
                {
                    @Html.Raw(string.Format(T("ShoppingCart.Mini.ItemsText").Text, string.Format("<a href=\"{0}\" class=\"items\">{1}</a>", Url.RouteUrl("ShoppingCart"), string.Format(T("ShoppingCart.Mini.Items").Text, Model.TotalProducts))))
                }*@
        </div>

        @if (Model.TotalProducts > 0)
        {
            <div class="items ">
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    var item = Model.Items[i];
                    <div class="item @(i == 0 ? "first" : null) row">

                        <div class="col-sm-8">
                            <div class="product">
                                <div class="name">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                   
                                </div>
                                @if (!String.IsNullOrEmpty(item.ShortDescription))
                                {
                                    <span class="short-description">
                                        @Html.Raw(item.ShortDescription)
                                    </span>
                                }

                                @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                {
                                    <div class="attributes">
                                        @Html.Raw(item.AttributeInfo)
                                    </div>
                                }

                                <div class="quantity">@T("ShoppingCart.Mini.Quantity"): @item.Quantity</div>
                                <div class="price">@item.UnitPrice</div>
                            </div>
                        </div>

                        @if (Model.ShowProductImages)
                        {
                            <div class="col-sm-4">
                                <div class="picture">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title">
                                        <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                    </a>
                                  
                                </div>
                            </div>

                        }
                    </div>

                }

            </div>


            <div class="totals">
                @if (Model.DisplayShoppingCartButton)
                {

                    <a href="@(Url.RouteUrl("ShoppingCart"))">View all items in the bag</a>@*@T("ShoppingCart.Mini.ViewCart")*@
                }
            </div>

            <div class="totals">
                @T("ShoppingCart.Totals.SubTotal")
                <span class="pull-right"> @Model.SubTotal</span>

            </div>



            <div class="buttons">

                @if (Model.DisplayCheckoutButton)
                {
                    var checkoutUrl = "";
                    if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                    {
                        checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                    }
                    else
                    {
                        checkoutUrl = Url.RouteUrl("Checkout");
                    }

                    <a href="@checkoutUrl">@T("Checkout.Button")</a>
                }
            </div>
        }

    </div>
</div>